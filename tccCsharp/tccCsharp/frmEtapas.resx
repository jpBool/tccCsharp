<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="OPBConfiguracoes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>