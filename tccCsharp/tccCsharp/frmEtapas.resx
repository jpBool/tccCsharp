<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="OPBConfiguracoes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>